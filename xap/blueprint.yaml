tosca_definitions_version: cloudify_dsl_1_0

#######
# Cloudify Blueprint which describes a xap cluster
#
imports:
    - http://www.getcloudify.org/spec/cloudify/3.1/types.yaml
    - http://www.getcloudify.org/spec/diamond-plugin/1.1/plugin.yaml


plugins:
    xap_config_plugin:
        executor: host_agent
        source: xap-config-plugin

    xap_admin_plugin:
        executor: host_agent
        source: xap-admin-plugin

workflows:
    deploy_grid:
        mapping: workflows/deploy_grid.py
        parameters:
            grid_name:
              default: dataGrid
            schema:
              default: partitioned-sync2backup
            partitions:
              default: 1
            backups:
              default: 0
            max_per_vm:
              default: 0
            max_per_machine:
              default: 0
    undeploy_grid:
        mapping: workflows/undeploy_grid.py
        parameters:
            grid_name:
              default: dataGrid
    deploy_pu:
        mapping: workflows/deploy_pu.py
        parameters:
            pu_url:
              default: ""
            override_pu_name:
              default: ""
            schema:
              default: partitioned-sync2backup
            partitions:
              default: 1
            backups:
              default: 0
            max_per_vm:
              default: 0
            max_per_machine:
              default: 0
    auto_heal_workflow:
        mapping: default_workflows.cloudify.plugins.workflows.auto_heal_reinstall_node_subgraph
        parameters:
            node_id:
              description: none

node_types:

    xap.monitoredServer:
        derived_from: cloudify.nodes.Compute
        interfaces:
          cloudify.interfaces.monitoring_agent:
              install:
                implementation: diamond.diamond_agent.tasks.install
                inputs:
                  diamond_config:
                    default:
                      interval: 1
              start: diamond.diamond_agent.tasks.start
              stop: diamond.diamond_agent.tasks.stop
              uninstall: diamond.diamond_agent.tasks.uninstall

          cloudify.interfaces.monitoring:
              start:
                implementation: diamond.diamond_agent.tasks.add_collectors
                inputs:
                  collectors_config:
                    default:
                      CPUCollector: {}
                      MemoryCollector: {}
                      LoadAverageCollector: {}
                      DiskUsageCollector:
                        config:
                          devices: x?vd[a-z]+[0-9]*$
                      NetworkCollector: {}

    xap_type:
        derived_from: cloudify.nodes.ApplicationServer
        properties:
            GSA_JAVA_OPTIONS:
                type: string
                default: ''
            gsm_cnt:
                type: integer
                default: 0
            global_gsm_cnt:
                type: integer
                default: 0
            GSM_JAVA_OPTIONS:
                type: string
                default: ''
            lus_cnt:
                type: integer
                default: 0
            lus_port:
                type: integer
                default: 0
            LUS_JAVA_OPTIONS:
                type: string
                default: ''
            global_lus_cnt:
                type: integer
                default: 0
            gsc_cnt:
                type: integer
                default: 0
            GSC_JAVA_OPTIONS:
                type: string
                default: ''
            download_url:
                type: string
                default: http://repository.cloudifysource.org/com/gigaspaces/xap-core/10.0.0-11600-RELEASE/gigaspaces-xap-premium-10.0.0-ga-b11600.zip
            license_key:
                type: string
                default: ''
            lrmi_comm_min_port:
                type: integer
                default: 7122
            lrmi_comm_max_port:
                type: integer
                default: 7222


relationships:
    xap_connected_to_lus:
        derived_from: cloudify.relationships.connected_to
        source_interfaces:
            cloudify.interfaces.relationship_lifecycle:
                postconfigure:
                    implementation: xap-scripts/get_locators.py
                    inputs: {}
     
node_templates:

         xap_mgmt_vm:
            type: xap.monitoredServer
            properties:
                ip: 127.0.0.1
                cloudify_agent:
                    key: /home/vagrant/.ssh/agent_key.pem
                    user: vagrant

         xap_container_vm:
            type: xap.monitoredServer
            properties:
                ip: 127.0.0.1
                cloudify_agent:
                    key: /home/vagrant/.ssh/agent_key.pem
                    user: vagrant

         xap_mgmt:
            type: xap_type
            properties:
                lus_cnt: 1
                global_lus_cnt: 0
                gsm_cnt: 1
                global_gsm_cnt: 0
                gsc_cnt: 0
                GSM_JAVA_OPTIONS: -Xms128m -Xmx128m
            relationships:
                -   target: xap_mgmt_vm
                    type: cloudify.relationships.contained_in
            interfaces:
                admin.commands:
                  deploy_grid:
                      implementation: xap_admin_plugin.xap_admin_plugin.tasks.deploy_grid
                      inputs:
                          script: xap-scripts/deploy-grid.sh
                  undeploy_grid:
                      implementation: xap_admin_plugin.xap_admin_plugin.tasks.undeploy_grid
                      inputs:
                          script: xap-scripts/undeploy-grid.sh
                  deploy_pu:
                      implementation: xap_admin_plugin.xap_admin_plugin.tasks.deploy_pu
                      inputs:
                          script: xap-scripts/deploy-pu.sh

                cloudify.interfaces.lifecycle:
                  create: xap-scripts/install-xap.sh
                  start: xap-scripts/start-xap.sh
                  stop: xap-scripts/stop-xap.sh


         xap_container:
            type: xap_type
            properties:
                gsc_cnt: 1
                GSC_JAVA_OPTIONS: -Xms128m -Xmx128m
            relationships:
                -   target: xap_container_vm
                    type: cloudify.relationships.contained_in
                -   target: xap_mgmt
                    type: xap_connected_to_lus
            interfaces:
                cloudify.interfaces.lifecycle:
                  create: xap-scripts/install-xap.sh
                  start: xap-scripts/start-xap.sh
                  stop: xap-scripts/stop-xap.sh

         webui:
            type: cloudify.nodes.WebServer
            interfaces:
                cloudify.interfaces.lifecycle:
                  start: xap-scripts/start-ui.sh
                  stop: xap-scripts/stop-ui.sh
            relationships:
                - target: xap_mgmt_vm
                  type: cloudify.relationships.contained_in
                - target: xap_mgmt
                  type: cloudify.relationships.depends_on

groups:

    autohealing_group:
      members: [xap_mgmt_vm,xap_container_vm,webui]
      policies:
        simple_autoheal_policy:
          type: cloudify.policies.types.host_failure
          triggers:
            auto_heal_trigger:
              type:
                cloudify.policies.triggers.execute_workflow
              parameters:
                workflow: auto_heal_workflow
                allow_custom_parameters: True
                workflow_parameters:
                  node_id:
                    get_property: ['SELF', 'failing_node']
                  diagnose_value:
                    get_property: ['SELF', 'diagnose']

outputs:

    management_ui:
      description: XAP UI URL
      value:
        ip: {  get_attribute: [ xap_mgmt_vm,  ip_address ] }
        port: 7104

